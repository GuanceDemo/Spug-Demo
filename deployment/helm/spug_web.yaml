---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spug-web
  namespace: spug
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deployment-spug-spug-web
  template:
    metadata:
      labels:
        app: deployment-spug-spug-web
    spec:
      volumes:
      - configMap:
          name: nginx-conf
        name: nginx-conf
      containers:
      - args:
        image: registry.cn-shenzhen.aliyuncs.com/guance-south/spug_web_demo:1.3
        imagePullPolicy: IfNotPresent
        name: spug-web
        ports:
        - containerPort: 80
          name: 80tcp01
          protocol: TCP
        resources: {}
        securityContext:
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-conf
          subPath: nginx.conf
        workingDir: /etc/nginx
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: registry-key
      restartPolicy: Always

---
  
apiVersion: v1
kind: Service
metadata:
  name: spug-web
  namespace: spug
spec:
  ports:
  - name: 80tcp00-spug
    port: 80
    protocol: TCP
    targetPort: 80
    nodePort: 30001
  selector:
    app: deployment-spug-spug-web
  sessionAffinity: None
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: spug
data:
  #### nginx.conf
  nginx.conf: |-
    # For more information on configuration, see:
    #   * Official English Documentation: http://nginx.org/en/docs/
    #   * Official Russian Documentation: http://nginx.org/ru/docs/

    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;

    # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
    include /usr/share/nginx/modules/*.conf;

    events {
        worker_connections 1024;
    }

    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        types_hash_max_size 2048;
        server_tokens       off;

        include             /etc/nginx/mime.types;
        default_type        application/octet-stream;

        # Load modular configuration files from the /etc/nginx/conf.d directory.
        # See http://nginx.org/en/docs/ngx_core_module.html#include
        # for more information.
        include /etc/nginx/conf.d/*.conf;

        server {
            listen       80 default_server;
            listen       [::]:80 default_server;
            server_name  _;
            root         /data/spug/spug_web/build;
      client_max_body_size	0;
            add_header   X-Frame-Options SAMEORIGIN always;

      gzip  on;
      gzip_min_length  1k;
      gzip_buffers     4 16k;
      gzip_http_version 1.1;
      gzip_comp_level 7;
      gzip_types       text/plain text/css text/javascript application/javascript application/json;
      gzip_disable "MSIE [1-6]\.";
      gzip_vary on;

            location ^~ /api/ {
                    rewrite ^/api(.*) $1 break;
                    proxy_pass http://spug-server.spug:8000;
        proxy_read_timeout 180s;
                    proxy_redirect off;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location ^~ /api/ws/ {
                    rewrite ^/api(.*) $1 break;
                    proxy_pass http://127.0.0.1:9002;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "Upgrade";
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }
          
            location / {
                    try_files $uri /index.html;
            }
        }
    }
